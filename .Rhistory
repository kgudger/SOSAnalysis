gbt <- ddply(mdata, .(year), summarise, GBT=sum(Glass.Bottles,Beverage.Bottles..Glass., na.rm = TRUE))
barplot(pot$POT, names.arg = pot$year, main="Pounds of Trash")
barplot(por$POR, names.arg = por$year, main="Pounds of Recycle")
# line plots of Trash, Recycling
plot(x=pot$year,y=pot$POT,type="o",xlab="Year",ylab="Pounds",pch="O",col="red",main="Trash / Recycling Collected")
lines(x=por$year,y=por$POR,type="o",col="green", pch="X")
legend("topleft", c("Trash","Recycling"),
col=c("red","green"), pch=c("O","X"));
#
barplot(cbs$CBS, names.arg=cbs$year, main="Cigarette Butts")
vol <-ddply(mdata, .(year), summarise, VOL=sum(X..of.Adults,X..of.Youth,X..of.Volunteers, na.rm = TRUE))
volh <-ddply(mdata, .(year), summarise, VOLH=sum(Volunteer.Hours, na.rm = TRUE))
barplot(volh$VOLH, names.arg = volh$year, main="Volunteer Hours")
barplot(vol$VOL, names.arg = vol$year, main="Volunteers")
barplot(volh$VOLH[-1]/vol$VOL[-1],names.arg=vol$year[-1],mail="Volunteer Hours / Volunteers")
barplot(volh$VOLH[-1]/vol$VOL[-1],names.arg=vol$year[-1],main="Volunteer Hours / Volunteers")
vh_adjust <- function(x) {
vols = x$X..of.Adults+x$X..of.Youth+x$X..of.Volunteers
if (x$Volunteer.Hours > vols) {
return(x$Volunteer.Hours*vols)
}
else
return(x$Volunteer.Hours)
}
vh_adjust <- function(x) {
vols = x$X..of.Adults+x$X..of.Youth+x$X..of.Volunteers
if (x$Volunteer.Hours > vols) {
return(x$Volunteer.Hours*vols)
}
else
return(x$Volunteer.Hours)
}
read_rename <- function(csv) {
df <- read.csv(csv)
colnames(df)[agrep("Cigarette.Butts",colnames(df))] <-
"Cigarette.Butts"
colnames(df)[grep("Plastic.Bags..Grocery|Grocery.Bags",colnames(df),ignore.case=TRUE)] <-
"Plastic.Bags.Grocery"
colnames(df)[agrep("Plastic.straws.stirrers",colnames(df))] <-
"Plastic.straws.stirrers"
colnames(df)[agrep("Syringes",colnames(df))] <-
"Syringes.or.Needles"
colnames(df)[agrep("Cardboard",colnames(df))] <-
"Cardboard"
colnames(df)[agrep("Tires",colnames(df))] <-
"Tires"
colnames(df)[agrep("id20",colnames(df))] <-
"id"
colnames(df)[grep("Metal.Cans|Metal.beverage.cans|Metal.Soda.cans|Metal.Beer.Cans",colnames(df),ignore.case=TRUE)] <-
"Metal.Cans"
colnames(df)[grep("Metal.Bottle.Caps|Metal.Can.pulls",colnames(df),ignore.case=TRUE)] <-
"Metal.Bottle.Caps.Pulls"
colnames(df)[agrep("Plastic.Bottle.Caps",colnames(df))] <-
"Plastic.Bottle.Caps"
colnames(df)[grep("Plastic.Bottles",colnames(df),ignore.case=TRUE)] <-
"Plastic.Bottles"
colnames(df)[grep("Glass.Bottles",colnames(df),ignore.case=TRUE)] <-
"Glass.Bottles"
colnames(df)[agrep("Fireworks",colnames(df))] <-
"Fireworks"
colnames(df)[grep("Styrofoam.Cups|Styrofoam.food.containers|Polystyrene.food..to.go|Polystyrene.cups",colnames(df))] <-
"Styrofoam.Cups.Plates.Bowls"
colnames(df)[grep("Styrofoam.Pieces|Pieces..Styrofoam",colnames(df),ignore.case=TRUE)] <-
"Styrofoam.Pieces"
colnames(df)[agrep("Cigarette.Lighters",colnames(df))] <-
"Cigarette.Lighters"
colnames(df)[grep("Metal.Fishing.hooks|Lures.or.Hooks",colnames(df),ignore.case=TRUE)] <-
"Metal.Fishing.Hooks.Lures"
colnames(df)[grep("Condoms",colnames(df),ignore.case=TRUE)] <-
"Condoms"
colnames(df)[grep("Diapers",colnames(df),ignore.case=TRUE)] <-
"Diapers"
colnames(df)[grep("Pallets",colnames(df),ignore.case=TRUE)] <-
"Pallets"
df$Volunteer.Hours = vh_adjust(df)
return(df)
}
b2017data <- read_rename("../SOSdata/2017-working-transpose.csv")
vh_adjust <- function(x) {
vols = sum(x$X..of.Adults,x$X..of.Youth,x$X..of.Volunteers,na.rm=TRUE)
if (vols > x$Volunteer.Hours) {
return(x$Volunteer.Hours*vols)
}
else if (x$Volunteer.Hours > 0) {
return(x$Volunteer.Hours)
}
else
return(vols)
}
mdata <- read.csv("../SOSdata/Merged.csv")
mdata$Cleanup.Date <- as.Date(mdata$Cleanup.Date, format = "%m/%d/%Y")
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust(mdata))
vh_adjust <- function(x) {
vols = sum(x$X..of.Adults,x$X..of.Youth,x$X..of.Volunteers,na.rm=TRUE)
if (vols > x$Volunteer.Hours) {
return(x$Volunteer.Hours*vols)
}
else if (x$Volunteer.Hours > 0) {
return(x$Volunteer.Hours)
}
else
return(vols)
}
mdata <- read.csv("../SOSdata/Merged.csv")
mdata$Cleanup.Date <- as.Date(mdata$Cleanup.Date, format = "%m/%d/%Y")
vols = sum(x$X..of.Adults,x$X..of.Youth,x$X..of.Volunteers,na.rm=TRUE)
if (vols > x$Volunteer.Hours) {
# plots below
library(plyr)
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust(mdata))
;
vh_adjust <- function(x) {
vols = sum(x$X..of.Adults,x$X..of.Youth,x$X..of.Volunteers,na.rm=TRUE)
if (vols > x$Volunteer.Hours) {
return(x$Volunteer.Hours*vols)
}
else if (x$Volunteer.Hours > 0) {
return(x$Volunteer.Hours)
}
else
return(vols)
}
vh_adjust <- function(x) {
vols = sum(x$X..of.Adults,x$X..of.Youth,x$X..of.Volunteers,na.rm=TRUE)
if (vols > x$Volunteer.Hours) {
return(x$Volunteer.Hours*vols)
}
else if (x$Volunteer.Hours > 0) {
return(x$Volunteer.Hours)
}
else
return(vols)
}
mdata <- read.csv("../SOSdata/Merged.csv")
mdata$Cleanup.Date <- as.Date(mdata$Cleanup.Date, format = "%m/%d/%Y")
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust(mdata))
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust)
vh_adjust <- function(x) {
vols = sum(x[X..of.Adults],x[X..of.Youth],x[X..of.Volunteers],na.rm=TRUE)
if (vols > x[Volunteer.Hours]) {
return(x[Volunteer.Hours]*vols)
}
else if (x[Volunteer.Hours] > 0) {
return(x$[Volunteer.Hours])
}
else
return(vols)
}
vh_adjust <- function(x) {
vols = sum(x[X..of.Adults],x[X..of.Youth],x[X..of.Volunteers],na.rm=TRUE)
if (vols > x[Volunteer.Hours]) {
return(x[Volunteer.Hours]*vols)
}
else if (x[Volunteer.Hours] > 0) {
return(x[Volunteer.Hours])
}
else
return(vols)
}
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust)
vh_adjust <- function(x) {
if (x[Volunteers.Total] > x[Volunteer.Hours]) {
return(x[Volunteers.Total]*x[Volunteer.Hours])
}
else if (x[Volunteer.Hours] > 0) {
return(x[Volunteer.Hours])
}
else
return(x[Volunteers.Total])
}
mdata$Volunteers.Total = sum(mdata$X..of.Adults,x$X..of.Youth,x$X..of.Volunteers,na.rm=TRUE)
mdata$Volunteers.Total = sum(mdata$X..of.Adults,mdata$X..of.Youth,mdata$X..of.Volunteers,na.rm=TRUE)
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust)
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust)
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust)
summary(mdata$Volunteers.Total)
head mdata
head(mdata)
mdata <- read.csv("../SOSdata/Merged.csv")
mdata$Cleanup.Date <- as.Date(mdata$Cleanup.Date, format = "%m/%d/%Y")
mdata$Volunteers.Total = rowSums(mdata[,c(X..of.Adults,X..of.Youth,X..of.Volunteers)],na.rm=TRUE)
colnames(mdata)
mdata$Volunteers.Total = rowSums(mdata[,c(X..of.Adults,X..of.Youth,X..of.Volunteers)],na.rm=TRUE)
mdata$Volunteers.Total <- rowSums(mdata[,c(X..of.Adults,X..of.Youth,X..of.Volunteers)],na.rm=TRUE)
mdata$Volunteers.Total <- rowSums(mdata[,c("X..of.Adults","X..of.Youth","X..of.Volunteers")],na.rm=TRUE)
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust)
vh_adjust <- function(x) {
if (x["Volunteers.Total"] > x["Volunteer.Hours"]) {
return(x["Volunteers.Total"]*x["Volunteer.Hours"])
}
else if (x["Volunteer.Hours"] > 0) {
return(x["Volunteer.Hours"])
}
else
return(x[Volunteers.Total])
}
vh_adjust <- function(x) {
if (x["Volunteers.Total"] > x["Volunteer.Hours"]) {
return(x["Volunteers.Total"]*x["Volunteer.Hours"])
}
else if (x["Volunteer.Hours"] > 0) {
return(x["Volunteer.Hours"])
}
else
return(x[Volunteers.Total])
}
mdata <- read.csv("../SOSdata/Merged.csv")
mdata$Cleanup.Date <- as.Date(mdata$Cleanup.Date, format = "%m/%d/%Y")
mdata$Volunteers.Total <- rowSums(mdata[,c("X..of.Adults","X..of.Youth","X..of.Volunteers")],na.rm=TRUE)
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust)
summary(mdata$Volunteers.Total)
mdata[,"Volunteer.Hours"][is.na(mdata[ ,"Volunteer.Hours"] ) ] = 0
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust)
summary(mdata$Volunteers.Total)
summary(mdata$Volunteers.Total)
head(mdata$Volunteers.Total)
mdata <- read.csv("../SOSdata/Merged.csv")
mdata$Cleanup.Date <- as.Date(mdata$Cleanup.Date, format = "%m/%d/%Y")
mdata[,"Volunteer.Hours"][is.na(mdata[ ,"Volunteer.Hours"] ) ] = 0
mdata[,"X..of.Adults"][is.na(mdata[ ,"X..of.Adults"] ) ] = 0
mdata[,"X..of.Youth"][is.na(mdata[ ,"X..of.Youth"] ) ] = 0
mdata[,"X..of.Volunteers"][is.na(mdata[ ,"X..of.Volunteers"] ) ] = 0
m
mdata$Volunteers.Total <- mdata$X..of.Adults + mdata$X..of.Youth + mdata$X..of.Volunteers
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust)
mdata <- read.csv("../SOSdata/Merged.csv")
mdata$Cleanup.Date <- as.Date(mdata$Cleanup.Date, format = "%m/%d/%Y")
mdata[,"Volunteer.Hours"][is.na(mdata[ ,"Volunteer.Hours"] ) ] = 0
mdata[,"X..of.Adults"][is.na(mdata[ ,"X..of.Adults"] ) ] = 0
mdata[,"X..of.Youth"][is.na(mdata[ ,"X..of.Youth"] ) ] = 0
mdata[,"X..of.Volunteers"][is.na(mdata[ ,"X..of.Volunteers"] ) ] = 0
mdata$Volunteers.Total <- mdata$X..of.Adults + mdata$X..of.Youth + mdata$X..of.Volunteers
mdata$Volunteer.Hours.Adjusted = ifelse(mdata$Volunteers.Total>mdata$Volunteer.Hours,
mdata$Volunteers.Total*mdata$Volunteer.Hours,
mdata$Volunteer.Hours)
summary(mdata$Volunteer.Hours.Adjusted)
library(plyr)
pot <-ddply(mdata, .(year), summarise, POT=sum(Pounds.of.Trash.Collected, na.rm = TRUE))
por <-ddply(mdata, .(year), summarise, POR=sum(Pounds.of.Recycle.Collected, na.rm = TRUE))
cbs <- ddply(mdata, .(year), summarise, CBS=sum(Cigarette.Butts, na.rm = TRUE))
# add in previous years' plastic bags?
pgb <- ddply(mdata, .(year), summarise, PGB=sum(Plastic.Bags.Grocery,Plastic.Bags, na.rm = TRUE))
pst <- ddply(mdata, .(year), summarise, PST=sum(Plastic.straws.stirrers, na.rm = TRUE))
# for plot add in Metal Cans
mdc <- ddply(mdata, .(year), summarise, MDC=sum(Metal.Cans, na.rm = TRUE))
mcp <- ddply(mdata, .(year), summarise, MCP=sum(Metal.Bottle.Caps.Pulls, na.rm = TRUE))
# for plot add in Plastic Lids or Caps
pcr <- ddply(mdata, .(year), summarise, PCR=sum(Plastic.Bottle.Caps,Plastic.Lids.or.Caps, na.rm = TRUE))
# for plot add in Beverage.Bottles..Plastic.
pbt <- ddply(mdata, .(year), summarise, PBT=sum(Plastic.Bottles,Beverage.Bottles..Plastic., na.rm = TRUE))
# for plot add in Beverage.Bottles..Glass.
gbt <- ddply(mdata, .(year), summarise, GBT=sum(Glass.Bottles,Beverage.Bottles..Glass., na.rm = TRUE))
barplot(pot$POT, names.arg = pot$year, main="Pounds of Trash")
barplot(por$POR, names.arg = por$year, main="Pounds of Recycle")
# line plots of Trash, Recycling
plot(x=pot$year,y=pot$POT,type="o",xlab="Year",ylab="Pounds",pch="O",col="red",main="Trash / Recycling Collected")
lines(x=por$year,y=por$POR,type="o",col="green", pch="X")
legend("topleft", c("Trash","Recycling"),
col=c("red","green"), pch=c("O","X"));
#
barplot(cbs$CBS, names.arg=cbs$year, main="Cigarette Butts")
vol <-ddply(mdata, .(year), summarise, VOL=sum(X..of.Adults,X..of.Youth,X..of.Volunteers, na.rm = TRUE))
volh <-ddply(mdata, .(year), summarise, VOLH=sum(Volunteer.Hours.Adjusted, na.rm = TRUE))
barplot(volh$VOLH, names.arg = volh$year, main="Volunteer Hours Adjusted")
barplot(vol$VOL, names.arg = vol$year, main="Volunteers")
barplot(volh$VOLH[-1]/vol$VOL[-1],names.arg=vol$year[-1],main="Volunteer Hours Adjusted / Volunteers")
barplot(pot$POT/volh$VOLH, names.arg = pot$year, main="Pounds of Trash Per Volunteer Hour Adjusted")
barplot(por$POR/volh$VOLH, names.arg = por$year, main="Pounds of Recycle Per Volunteer Hour Adjusted")
barplot(pot$POT/vol$VOL, names.arg = pot$year, main="Pounds of Trash Per Volunteer")
barplot(por$POR/vol$VOL, names.arg = por$year, main="Pounds of Recycle Per Volunteer")
barplot(cbs$CBS[-1]/vol$VOL[-1], names.arg=cbs$year[-1], main="Cigarette Butts per Volunteer")
barplot(cbs$CBS[-1]/volh$VOLH[-1], names.arg=cbs$year[-1], main="Cigarette Butts per Volunteer Hour Adjusted")
barplot(pgb$PGB, names.arg=pgb$year, main="Plastic Grocery Bags")
barplot(pgb$PGB[-1]/volh$VOLH[-1], names.arg=pgb$year[-1], main="Plastic Grocery Bags Per Volunteer Hour Adjusted")
barplot(pgb$PGB[-1]/vol$VOL[-1], names.arg=pgb$year[-1], main="Plastic Grocery Bags Per Volunteer")
barplot(pst$PST[-1]/vol$VOL[-1], names.arg=pst$year[-1], main="Plastic Straws & Stirrers per Volunteer")
barplot(mdc$MDC[-1]/vol$VOL[-1], names.arg=mdc$year[-1], main="Metal Drink Cans per Volunteer")
barplot(mcp$MCP[-1]/vol$VOL[-1], names.arg=mcp$year[-1], main="Metal Cans Tops per Volunteer")
barplot(pcr$PCR[-1]/vol$VOL[-1], names.arg=pcr$year[-1], main="Plastic Tops and Rings per Volunteer")
barplot(pbt$PBT[-1]/vol$VOL[-1], names.arg=pbt$year[-1], main="Plastic Bottles per Volunteer")
barplot(gbt$GBT[-1]/vol$VOL[-1], names.arg=gbt$year[-1], main="Glass Bottles per Volunteer")
# line plots of above items
#plot(x=cbs$year,y=cbs$CBS,type="o",xlab="Year",ylab="Total",pch="O",col="red",main="Items Per Year")
#lines(x=pgb$year,y=pgb$PGB,type="o",col="green", pch="X")
g_range <- range(0, pgb$PGB[-1]/vol$VOL[-1], pst$PST[-1]/vol$VOL[-1],mdc$MDC[-1]/vol$VOL[-1],mcp$MCP[-1]/vol$VOL[-1],pcr$PCR[-1]/vol$VOL[-1],pbt$PBT[-1]/vol$VOL[-1],gbt$GBT[-1]/vol$VOL[-1])
plot(x=pgb$year[-1],y=pgb$PGB[-1]/vol$VOL[-1],type="o",ylim=g_range,xlab="Year",ylab="Total",pch="O",col="red",main="Items Per Year Per Volunteer")
lines(x=pst$year[-1],y=pst$PST[-1]/vol$VOL[-1],type="o",col="blue", pch="P")
lines(x=mdc$year[-1],y=mdc$MDC[-1]/vol$VOL[-1],type="o",col="black", pch="M")
lines(x=mcp$year[-1],y=mcp$MCP[-1]/vol$VOL[-1],type="o",col="cyan", pch="T")
lines(x=pcr$year[-1],y=pcr$PCR[-1]/vol$VOL[-1],type="o",col="magenta", pch="R")
lines(x=pbt$year[-1],y=pbt$PBT[-1]/vol$VOL[-1],type="o",col="yellow", pch="B")
lines(x=gbt$year[-1],y=gbt$GBT[-1]/vol$VOL[-1],type="o",col="green", pch="G")
legend("topleft", c("Plastic Bags","Straws","Metal Cans","Metal Tabs","Plastic Tops","Plastic Bottles","Glass Bottles"),
col=c("red","blue","black","cyan","magenta","yellow","green"), pch=c("X","P","M","T","R","B","G"));
barplot(pst$PST[-1]/volh$VOLH[-1], names.arg=pst$year[-1], main="Plastic Straws & Stirrers per Volunteer Hour Adjusted")
barplot(mdc$MDC[-1]/volh$VOLH[-1], names.arg=mdc$year[-1], main="Metal Drink Cans per Volunteer Hour Adjusted")
barplot(mcp$MCP[-1]/volh$VOLH[-1], names.arg=mcp$year[-1], main="Metal Cans Tops per Volunteer Hour Adjusted")
barplot(pcr$PCR[-1]/volh$VOLH[-1], names.arg=pcr$year[-1], main="Plastic Tops and Rings per Volunteer Hour Adjusted")
barplot(pbt$PBT[-1]/volh$VOLH[-1], names.arg=pbt$year[-1], main="Plastic Bottles per Volunteer Hour Adjusted")
barplot(gbt$GBT[-1]/volh$VOLH[-1], names.arg=gbt$year[-1], main="Glass Bottles per Volunteer Hour Adjusted")
# line plots of above items
#plot(x=cbs$year,y=cbs$CBS,type="o",xlab="Year",ylab="Total",pch="O",col="red",main="Items Per Year")
#lines(x=pgb$year,y=pgb$PGB,type="o",col="green", pch="X")
g_range <- range(0, pgb$PGB[-1]/volh$VOLH[-1], pst$PST[-1]/volh$VOLH[-1],mdc$MDC[-1]/volh$VOLH[-1],mcp$MCP[-1]/volh$VOLH[-1],pcr$PCR[-1]/volh$VOLH[-1],pbt$PBT[-1]/volh$VOLH[-1],gbt$GBT[-1]/volh$VOLH[-1])
plot(x=pgb$year[-1],y=pgb$PGB[-1]/volh$VOLH[-1],type="o",ylim=g_range,xlab="Year",ylab="Total",pch="O",col="red",main="Items Per Year Per Volunteer Hour Adjusted")
lines(x=pst$year[-1],y=pst$PST[-1]/volh$VOLH[-1],type="o",col="blue", pch="P")
lines(x=mdc$year[-1],y=mdc$MDC[-1]/volh$VOLH[-1],type="o",col="black", pch="M")
lines(x=mcp$year[-1],y=mcp$MCP[-1]/volh$VOLH[-1],type="o",col="cyan", pch="T")
lines(x=pcr$year[-1],y=pcr$PCR[-1]/volh$VOLH[-1],type="o",col="magenta", pch="R")
lines(x=pbt$year[-1],y=pbt$PBT[-1]/volh$VOLH[-1],type="o",col="yellow", pch="B")
lines(x=gbt$year[-1],y=gbt$GBT[-1]/volh$VOLH[-1],type="o",col="green", pch="G")
legend("topleft", c("Plastic Bags","Straws","Metal Cans","Metal Tabs","Plastic Tops","Plastic Bottles","Glass Bottles"),
col=c("red","blue","black","cyan","magenta","yellow","green"), pch=c("X","P","M","T","R","B","G"));
# line plots of above items
#plot(x=cbs$year,y=cbs$CBS,type="o",xlab="Year",ylab="Total",pch="O",col="red",main="Items Per Year")
#lines(x=pgb$year,y=pgb$PGB,type="o",col="green", pch="X")
g_range <- range(0, pgb$PGB[-1]/volh$VOLH[-1], pst$PST[-1]/volh$VOLH[-1],mdc$MDC[-1]/volh$VOLH[-1],mcp$MCP[-1]/volh$VOLH[-1],pcr$PCR[-1]/volh$VOLH[-1],pbt$PBT[-1]/volh$VOLH[-1],gbt$GBT[-1]/volh$VOLH[-1])
plot(x=pgb$year[-1],y=pgb$PGB[-1]/volh$VOLH[-1],type="o",ylim=g_range,xlab="Year",ylab="Total",pch="O",col="red",main="Items Per Year Per Volunteer Hour Adjusted")
lines(x=pst$year[-1],y=pst$PST[-1]/volh$VOLH[-1],type="o",col="blue", pch="P")
lines(x=mdc$year[-1],y=mdc$MDC[-1]/volh$VOLH[-1],type="o",col="black", pch="M")
lines(x=mcp$year[-1],y=mcp$MCP[-1]/volh$VOLH[-1],type="o",col="cyan", pch="T")
lines(x=pcr$year[-1],y=pcr$PCR[-1]/volh$VOLH[-1],type="o",col="magenta", pch="R")
lines(x=pbt$year[-1],y=pbt$PBT[-1]/volh$VOLH[-1],type="o",col="yellow", pch="B")
lines(x=gbt$year[-1],y=gbt$GBT[-1]/volh$VOLH[-1],type="o",col="green", pch="G")
legend("topleft", c("Plastic Bags","Straws","Metal Cans","Metal Tabs","Plastic Tops","Plastic Bottles","Glass Bottles"),
col=c("red","blue","black","cyan","magenta","yellow","green"), pch=c("X","P","M","T","R","B","G"));
# line plots of above items
#plot(x=cbs$year,y=cbs$CBS,type="o",xlab="Year",ylab="Total",pch="O",col="red",main="Items Per Year")
#lines(x=pgb$year,y=pgb$PGB,type="o",col="green", pch="X")
g_range <- range(0, pgb$PGB[-1]/volh$VOLH[-1], pst$PST[-1]/volh$VOLH[-1],mdc$MDC[-1]/volh$VOLH[-1],mcp$MCP[-1]/volh$VOLH[-1],pcr$PCR[-1]/volh$VOLH[-1],pbt$PBT[-1]/volh$VOLH[-1],gbt$GBT[-1]/volh$VOLH[-1])
plot(x=pgb$year[-1],y=pgb$PGB[-1]/volh$VOLH[-1],type="o",ylim=g_range,xlab="Year",ylab="Total",pch="X",col="red",main="Items Per Year Per Volunteer Hour Adjusted")
lines(x=pst$year[-1],y=pst$PST[-1]/volh$VOLH[-1],type="o",col="blue", pch="P")
lines(x=mdc$year[-1],y=mdc$MDC[-1]/volh$VOLH[-1],type="o",col="black", pch="M")
lines(x=mcp$year[-1],y=mcp$MCP[-1]/volh$VOLH[-1],type="o",col="cyan", pch="T")
lines(x=pcr$year[-1],y=pcr$PCR[-1]/volh$VOLH[-1],type="o",col="magenta", pch="R")
lines(x=pbt$year[-1],y=pbt$PBT[-1]/volh$VOLH[-1],type="o",col="yellow", pch="B")
lines(x=gbt$year[-1],y=gbt$GBT[-1]/volh$VOLH[-1],type="o",col="green", pch="G")
legend("topleft", c("Plastic Bags","Straws","Metal Cans","Metal Tabs","Plastic Tops","Plastic Bottles","Glass Bottles"),
col=c("red","blue","black","cyan","magenta","yellow","green"), pch=c("X","P","M","T","R","B","G"));
rm(list=ls())
mdata <- read.csv("../SOSdata/Merged.csv")
mdata$Cleanup.Date <- as.Date(mdata$Cleanup.Date, format = "%m/%d/%Y")
mdata[,"Volunteer.Hours"][is.na(mdata[ ,"Volunteer.Hours"] ) ] = 0
mdata[,"X..of.Adults"][is.na(mdata[ ,"X..of.Adults"] ) ] = 0
mdata[,"X..of.Youth"][is.na(mdata[ ,"X..of.Youth"] ) ] = 0
mdata[,"X..of.Volunteers"][is.na(mdata[ ,"X..of.Volunteers"] ) ] = 0
mdata$Volunteers.Total <- mdata$X..of.Adults + mdata$X..of.Youth + mdata$X..of.Volunteers
mdata$Volunteer.Hours.Adjusted = ifelse(mdata$Volunteers.Total>mdata$Volunteer.Hours,
mdata$Volunteers.Total*mdata$Volunteer.Hours,
mdata$Volunteer.Hours)
mdata$Volunteer.Hours.Adjusted = sapply(mdata,vh_adjust)
# plots below
library(plyr)
pot <-ddply(mdata, .(year), summarise, POT=sum(Pounds.of.Trash.Collected, na.rm = TRUE))
por <-ddply(mdata, .(year), summarise, POR=sum(Pounds.of.Recycle.Collected, na.rm = TRUE))
cbs <- ddply(mdata, .(year), summarise, CBS=sum(Cigarette.Butts, na.rm = TRUE))
# add in previous years' plastic bags?
pgb <- ddply(mdata, .(year), summarise, PGB=sum(Plastic.Bags.Grocery,Plastic.Bags, na.rm = TRUE))
pst <- ddply(mdata, .(year), summarise, PST=sum(Plastic.straws.stirrers, na.rm = TRUE))
# for plot add in Metal Cans
mdc <- ddply(mdata, .(year), summarise, MDC=sum(Metal.Cans, na.rm = TRUE))
mcp <- ddply(mdata, .(year), summarise, MCP=sum(Metal.Bottle.Caps.Pulls, na.rm = TRUE))
# for plot add in Plastic Lids or Caps
pcr <- ddply(mdata, .(year), summarise, PCR=sum(Plastic.Bottle.Caps,Plastic.Lids.or.Caps, na.rm = TRUE))
# for plot add in Beverage.Bottles..Plastic.
pbt <- ddply(mdata, .(year), summarise, PBT=sum(Plastic.Bottles,Beverage.Bottles..Plastic., na.rm = TRUE))
# for plot add in Beverage.Bottles..Glass.
gbt <- ddply(mdata, .(year), summarise, GBT=sum(Glass.Bottles,Beverage.Bottles..Glass., na.rm = TRUE))
barplot(pot$POT, names.arg = pot$year, main="Pounds of Trash")
barplot(por$POR, names.arg = por$year, main="Pounds of Recycle")
# line plots of Trash, Recycling
plot(x=pot$year,y=pot$POT,type="o",xlab="Year",ylab="Pounds",pch="O",col="red",main="Trash / Recycling Collected")
lines(x=por$year,y=por$POR,type="o",col="green", pch="X")
legend("topleft", c("Trash","Recycling"),
col=c("red","green"), pch=c("O","X"));
#
barplot(cbs$CBS, names.arg=cbs$year, main="Cigarette Butts")
vol <-ddply(mdata, .(year), summarise, VOL=sum(X..of.Adults,X..of.Youth,X..of.Volunteers, na.rm = TRUE))
volh <-ddply(mdata, .(year), summarise, VOLH=sum(Volunteer.Hours.Adjusted, na.rm = TRUE))
barplot(volh$VOLH, names.arg = volh$year, main="Volunteer Hours Adjusted")
barplot(vol$VOL, names.arg = vol$year, main="Volunteers")
barplot(volh$VOLH[-1]/vol$VOL[-1],names.arg=vol$year[-1],main="Volunteer Hours Adjusted / Volunteers")
barplot(pot$POT/volh$VOLH, names.arg = pot$year, main="Pounds of Trash Per Volunteer Hour Adjusted")
barplot(por$POR/volh$VOLH, names.arg = por$year, main="Pounds of Recycle Per Volunteer Hour Adjusted")
barplot(pot$POT/vol$VOL, names.arg = pot$year, main="Pounds of Trash Per Volunteer")
barplot(por$POR/vol$VOL, names.arg = por$year, main="Pounds of Recycle Per Volunteer")
barplot(cbs$CBS[-1]/vol$VOL[-1], names.arg=cbs$year[-1], main="Cigarette Butts per Volunteer")
barplot(cbs$CBS[-1]/volh$VOLH[-1], names.arg=cbs$year[-1], main="Cigarette Butts per Volunteer Hour Adjusted")
barplot(pgb$PGB, names.arg=pgb$year, main="Plastic Grocery Bags")
barplot(pgb$PGB[-1]/volh$VOLH[-1], names.arg=pgb$year[-1], main="Plastic Grocery Bags Per Volunteer Hour Adjusted")
barplot(pgb$PGB[-1]/vol$VOL[-1], names.arg=pgb$year[-1], main="Plastic Grocery Bags Per Volunteer")
barplot(pst$PST[-1]/volh$VOLH[-1], names.arg=pst$year[-1], main="Plastic Straws & Stirrers per Volunteer Hour Adjusted")
barplot(mdc$MDC[-1]/volh$VOLH[-1], names.arg=mdc$year[-1], main="Metal Drink Cans per Volunteer Hour Adjusted")
barplot(mcp$MCP[-1]/volh$VOLH[-1], names.arg=mcp$year[-1], main="Metal Cans Tops per Volunteer Hour Adjusted")
barplot(pcr$PCR[-1]/volh$VOLH[-1], names.arg=pcr$year[-1], main="Plastic Tops and Rings per Volunteer Hour Adjusted")
barplot(pbt$PBT[-1]/volh$VOLH[-1], names.arg=pbt$year[-1], main="Plastic Bottles per Volunteer Hour Adjusted")
barplot(gbt$GBT[-1]/volh$VOLH[-1], names.arg=gbt$year[-1], main="Glass Bottles per Volunteer Hour Adjusted")
# line plots of above items
#plot(x=cbs$year,y=cbs$CBS,type="o",xlab="Year",ylab="Total",pch="O",col="red",main="Items Per Year")
#lines(x=pgb$year,y=pgb$PGB,type="o",col="green", pch="X")
g_range <- range(0, pgb$PGB[-1]/volh$VOLH[-1], pst$PST[-1]/volh$VOLH[-1],mdc$MDC[-1]/volh$VOLH[-1],mcp$MCP[-1]/volh$VOLH[-1],pcr$PCR[-1]/volh$VOLH[-1],pbt$PBT[-1]/volh$VOLH[-1],gbt$GBT[-1]/volh$VOLH[-1])
plot(x=pgb$year[-1],y=pgb$PGB[-1]/volh$VOLH[-1],type="o",ylim=g_range,xlab="Year",ylab="Total",pch="X",col="red",main="Items Per Year Per Volunteer Hour Adjusted")
lines(x=pst$year[-1],y=pst$PST[-1]/volh$VOLH[-1],type="o",col="blue", pch="P")
lines(x=mdc$year[-1],y=mdc$MDC[-1]/volh$VOLH[-1],type="o",col="black", pch="M")
lines(x=mcp$year[-1],y=mcp$MCP[-1]/volh$VOLH[-1],type="o",col="cyan", pch="T")
lines(x=pcr$year[-1],y=pcr$PCR[-1]/volh$VOLH[-1],type="o",col="magenta", pch="R")
lines(x=pbt$year[-1],y=pbt$PBT[-1]/volh$VOLH[-1],type="o",col="yellow", pch="B")
lines(x=gbt$year[-1],y=gbt$GBT[-1]/volh$VOLH[-1],type="o",col="green", pch="G")
legend("topleft", c("Plastic Bags","Straws","Metal Cans","Metal Tabs","Plastic Tops","Plastic Bottles","Glass Bottles"),
col=c("red","blue","black","cyan","magenta","yellow","green"), pch=c("X","P","M","T","R","B","G"));
#
ind <- which(sapply(mdata, is.numeric))
library(ggplot2)
library(GGally)
ggcorr(mdata[,agrep("Plastic",colnames(mdata))],method="pairwise",label=TRUE,alpha=TRUE, label_size = 3, hjust = 0.75, size = 2, layout.exp = 2)
ggcorr(mdata[,agrep("Bag",colnames(mdata))], method="pairwise",label=TRUE,alpha=TRUE, label_size = 3, hjust = 0.75, size = 2, layout.exp = 2)
qplot(mdata$Plastic.straws.stirrers,mdata$Plastic.Bottle.Caps,data=mdata,geom = c("point", "smooth"),method = "lm", alpha = I(1 / 5), se = FALSE) +
scale_x_log10() + scale_y_log10()
MCOR <- cor(mdata[sapply(mdata, is.numeric)],use="p") # correlation matrix
MCOR[lower.tri(MCOR, diag = TRUE)] <- NA          # lower tri and diag set to NA
sSet <- subset(na.omit(data.frame(expand.grid(dimnames(MCOR)), value = c(MCOR))), value > .6999)
sSet <- sSet[order(sSet$value), ]
write.csv(sSet, file="../SOSdata/Corr.csv",row.names=FALSE, na="")
qplot(mdata$Beverage.Cans,mdata$Beverage.Bottles..Glass.,data=mdata,geom = c("point", "smooth"),method = "lm", alpha = I(1 / 5), se = FALSE) +
scale_x_log10() + scale_y_log10()
qplot(mdata$Plastic.Bottles,mdata$Glass.Bottles,data=mdata,geom = c("point", "smooth"),method = "lm", alpha = I(1 / 5), se = FALSE) +
scale_x_log10() + scale_y_log10()
qplot(mdata$Condoms,mdata$X6.Pack.Holders,data=mdata,geom = c("point", "smooth"),method = "lm", alpha = I(1 / 5), se = FALSE) +
scale_x_log10() + scale_y_log10()
qplot(mdata$Lids..Plastic.,mdata$Straws.Stirrers,data=mdata,geom = c("point", "smooth"),method = "lm", alpha = I(1 / 5), se = FALSE) +
scale_x_log10() + scale_y_log10()
qplot(mdata$Cigarette.Lighters,mdata$Cigarette.box.or.wrappers,data=mdata,geom = c("point", "smooth"),method = "lm", alpha = I(1 / 5), se = FALSE) +
scale_x_log10() + scale_y_log10()
# by beach name
potb <-ddply(mdata, .(Cleanup.Site), summarise, POTB=sum(Pounds.of.Trash.Collected, na.rm = TRUE))
potb <- potb[potb$POTB>800,]
barplot(potb$POTB, names.arg = potb$Cleanup.Site, cex.names = .5,las=2, main="Pounds of Trash")
# by City / County
ccty <-ddply(mdata, .(City.County), summarise, CCTY=sum(Pounds.of.Trash.Collected, na.rm = TRUE))
barplot(ccty$CCTY, names.arg = ccty$City.County, cex.names = .5,las=2, main="Pounds of Trash")
sdtt <- ddply(mdata, .(Cleanup.Date), summarise, SDTT=sum(Pounds.of.Trash.Collected, na.rm = TRUE))
startdate <- as.Date(c("01/01/2017"), format = "%m/%d/%Y")
enddate   <- as.Date(c("01/01/2018"), format = "%m/%d/%Y")
sdtt <- sdtt[sdtt$Cleanup.Date<enddate,]
sdtt <- sdtt[sdtt$Cleanup.Date>=startdate,]
#  trash plot for 2017
barplot(sdtt$SDTT, names.arg = sdtt$Cleanup.Date, cex.names = .5,las=2, main="Pounds of Trash")
# setup for Fireworks
frw <- ddply(mdata, .(Cleanup.Date), summarise, FRW=sum(Fireworks, na.rm = TRUE))
frw <- frw[frw$Cleanup.Date<enddate,]
frw <- frw[frw$Cleanup.Date>=startdate,]
#  Firworks plot for 2017
barplot(frw$FRW, names.arg = frw$Cleanup.Date, cex.names = .5,las=2, main="Fireworks")
# setup for Volunteer Hours
vhr <- ddply(mdata, .(Cleanup.Date), summarise, VHR=sum(Volunteer.Hours.Adjusted, na.rm = TRUE))
vhr <- vhr[vhr$Cleanup.Date<enddate,]
vhr <- vhr[vhr$Cleanup.Date>=startdate,]
#  Volunteer Hours plot for 2017
barplot(vhr$VHR, names.arg = vhr$Cleanup.Date, cex.names = .5,las=2, main="Volunteer Hours Adjusted")
mdata <- read.csv("../SOSdata/Merged.csv")
mdata$Cleanup.Date <- as.Date(mdata$Cleanup.Date, format = "%m/%d/%Y")
mdata[,"Volunteer.Hours"][is.na(mdata[ ,"Volunteer.Hours"] ) ] = 0
mdata[,"X..of.Adults"][is.na(mdata[ ,"X..of.Adults"] ) ] = 0
mdata[,"X..of.Youth"][is.na(mdata[ ,"X..of.Youth"] ) ] = 0
mdata[,"X..of.Volunteers"][is.na(mdata[ ,"X..of.Volunteers"] ) ] = 0
mdata$Volunteers.Total <- mdata$X..of.Adults + mdata$X..of.Youth + mdata$X..of.Volunteers
mdata$Volunteer.Hours.Adjusted = ifelse(mdata$Volunteers.Total>mdata$Volunteer.Hours,
mdata$Volunteers.Total*mdata$Volunteer.Hours,
mdata$Volunteer.Hours)
# plots below
library(plyr)
pot <-ddply(mdata, .(year), summarise, POT=sum(Pounds.of.Trash.Collected, na.rm = TRUE))
por <-ddply(mdata, .(year), summarise, POR=sum(Pounds.of.Recycle.Collected, na.rm = TRUE))
cbs <- ddply(mdata, .(year), summarise, CBS=sum(Cigarette.Butts, na.rm = TRUE))
# add in previous years' plastic bags?
pgb <- ddply(mdata, .(year), summarise, PGB=sum(Plastic.Bags.Grocery,Plastic.Bags, na.rm = TRUE))
pst <- ddply(mdata, .(year), summarise, PST=sum(Plastic.straws.stirrers, na.rm = TRUE))
# for plot add in Metal Cans
mdc <- ddply(mdata, .(year), summarise, MDC=sum(Metal.Cans, na.rm = TRUE))
mcp <- ddply(mdata, .(year), summarise, MCP=sum(Metal.Bottle.Caps.Pulls, na.rm = TRUE))
# for plot add in Plastic Lids or Caps
pcr <- ddply(mdata, .(year), summarise, PCR=sum(Plastic.Bottle.Caps,Plastic.Lids.or.Caps, na.rm = TRUE))
# for plot add in Beverage.Bottles..Plastic.
pbt <- ddply(mdata, .(year), summarise, PBT=sum(Plastic.Bottles,Beverage.Bottles..Plastic., na.rm = TRUE))
# for plot add in Beverage.Bottles..Glass.
gbt <- ddply(mdata, .(year), summarise, GBT=sum(Glass.Bottles,Beverage.Bottles..Glass., na.rm = TRUE))
barplot(pot$POT, names.arg = pot$year, main="Pounds of Trash")
barplot(por$POR, names.arg = por$year, main="Pounds of Recycle")
# line plots of Trash, Recycling
plot(x=pot$year,y=pot$POT,type="o",xlab="Year",ylab="Pounds",pch="O",col="red",main="Trash / Recycling Collected")
lines(x=por$year,y=por$POR,type="o",col="green", pch="X")
legend("topleft", c("Trash","Recycling"),
col=c("red","green"), pch=c("O","X"));
#
barplot(cbs$CBS, names.arg=cbs$year, main="Cigarette Butts")
vol <-ddply(mdata, .(year), summarise, VOL=sum(X..of.Adults,X..of.Youth,X..of.Volunteers, na.rm = TRUE))
volh <-ddply(mdata, .(year), summarise, VOLH=sum(Volunteer.Hours.Adjusted, na.rm = TRUE))
barplot(volh$VOLH, names.arg = volh$year, main="Volunteer Hours Adjusted")
barplot(vol$VOL, names.arg = vol$year, main="Volunteers")
barplot(volh$VOLH[-1]/vol$VOL[-1],names.arg=vol$year[-1],main="Volunteer Hours Adjusted / Volunteers")
barplot(pot$POT/volh$VOLH, names.arg = pot$year, main="Pounds of Trash Per Volunteer Hour Adjusted")
barplot(por$POR/volh$VOLH, names.arg = por$year, main="Pounds of Recycle Per Volunteer Hour Adjusted")
barplot(pot$POT/vol$VOL, names.arg = pot$year, main="Pounds of Trash Per Volunteer")
barplot(por$POR/vol$VOL, names.arg = por$year, main="Pounds of Recycle Per Volunteer")
barplot(cbs$CBS[-1]/vol$VOL[-1], names.arg=cbs$year[-1], main="Cigarette Butts per Volunteer")
barplot(cbs$CBS[-1]/volh$VOLH[-1], names.arg=cbs$year[-1], main="Cigarette Butts per Volunteer Hour Adjusted")
barplot(pgb$PGB, names.arg=pgb$year, main="Plastic Grocery Bags")
barplot(pgb$PGB[-1]/volh$VOLH[-1], names.arg=pgb$year[-1], main="Plastic Grocery Bags Per Volunteer Hour Adjusted")
barplot(pgb$PGB[-1]/vol$VOL[-1], names.arg=pgb$year[-1], main="Plastic Grocery Bags Per Volunteer")
barplot(pst$PST[-1]/volh$VOLH[-1], names.arg=pst$year[-1], main="Plastic Straws & Stirrers per Volunteer Hour Adjusted")
barplot(mdc$MDC[-1]/volh$VOLH[-1], names.arg=mdc$year[-1], main="Metal Drink Cans per Volunteer Hour Adjusted")
barplot(mcp$MCP[-1]/volh$VOLH[-1], names.arg=mcp$year[-1], main="Metal Cans Tops per Volunteer Hour Adjusted")
